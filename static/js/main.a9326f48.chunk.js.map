{"version":3,"sources":["components/ui/VolumeControl.module.css","components/menu/MusicMenu.module.css","components/Wrappers/Menu.module.css","components/ui/Card.module.css","components/Wrappers/Github.module.css","components/ui/Button.module.css","components/Wrappers/Buttons.module.css","store/audio-context.js","components/Wrappers/Audio.js","store/video-context.js","components/Wrappers/Video.js","components/menu/VideoList.js","components/ui/VolumeControl.js","components/ui/Card.js","components/menu/MusicMenu.js","components/Wrappers/Github.js","components/ui/Button.js","components/Wrappers/Buttons.js","components/Wrappers/Menu.js","store/VideoProvider.js","store/AudioProvider.js","App.js","reportWebVitals.js","index.js","components/menu/VideoList.module.css"],"names":["module","exports","AudioContext","React","createContext","name","url","Audio","audioCtx","useContext","className","playing","volume","onEnded","selectRandom","VideoContext","start","muted","Video","videoCtx","max","countryLength","video","country","length","addVideo","Math","floor","random","VideoList","useState","displayCountry","setDisplayCountry","setListDisplayType","prev","list","videos","map","item","classes","bold","onClick","changeDisplay","role","videoList","content","property","push","changeCountry","videoCategoriesGen","icon","VolumeControl","props","volumeControl","label","htmlFor","type","min","step","value","onChange","onVolumeChange","Card","children","MusicMenu","e","changeVolume","target","wrapper","genre","music","musicTypesGen","Github","href","github","color","Button","button","Buttons","buttons","changeMute","setPlayStatus","Menu","menu","title","VideoProvider","videoState","setVideoState","isMuted","setIsMuted","setCountry","changeVideoHandler","videoContext","Provider","AudioProvider","audioState","setAudioState","isPlaying","setIsPlaying","setVolume","setGenre","changeAudioHandler","changeGenre","getRandomInt","audioContext","changeAudio","selectedGenre","genreLength","App","menuVisible","setMenuVisible","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9326f48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"volumeControl\":\"VolumeControl_volumeControl__3WcDp\",\"label\":\"VolumeControl_label__1BTs2\",\"volume\":\"VolumeControl_volume__1OfC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"MusicMenu_name__3qm6w\",\"wrapper\":\"MusicMenu_wrapper__mFd5Y\",\"type\":\"MusicMenu_type__3z919\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__3KCbk\",\"title\":\"Menu_title__1Tc1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1hsvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"github\":\"Github_github__3Iv0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__33CwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Buttons_buttons__tlssM\"};","import React from \"react\";\nconst AudioContext = React.createContext({\n  name: \"\",\n  url: \"\",\n});\nexport default AudioContext;\n","import ReactPlayer from \"react-player\";\nimport { useContext } from \"react\";\nimport AudioContext from \"../../store/audio-context\";\n\nconst Audio = () => {\n  const audioCtx = useContext(AudioContext);\n\n  return (\n    <>\n      <div className=\"audio-stream\">\n        <ReactPlayer\n          className=\"audio\"\n          playing={audioCtx.playing}\n          volume={audioCtx.volume}\n          url={audioCtx.url}\n          onEnded={audioCtx.selectRandom}\n        />\n      </div>\n    </>\n  );\n};\nexport default Audio;\n","import React from \"react\";\n\nconst VideoContext = React.createContext({\n  name: \"\",\n  url: \"\",\n  start: \"\",\n  muted: \"\",\n});\n\nexport default VideoContext;\n","import VideoContext from \"../../store/video-context\";\nimport ReactPlayer from \"react-player\";\nimport video from \"../../data/videos.json\";\nimport \"./Video.css\";\nimport { useContext } from \"react\";\n\nconst Video = () => {\n  const videoCtx = useContext(VideoContext);\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const selectRandom = () => {\n    const countryLength = video[videoCtx.country].length;\n    videoCtx.addVideo(video[videoCtx.country][getRandomInt(countryLength)]);\n  };\n\n  return (\n    <>\n      <div className=\"video-background\">\n        <div className=\"video-foreground\">\n          <ReactPlayer\n            volume={0.5}\n            url={`https://www.youtube.com/watch?v=${\n              videoCtx.url\n            }${`?t=${videoCtx.start}`}`}\n            muted={videoCtx.muted}\n            onEnded={selectRandom}\n            playing={true}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Video;\n","import videos from \"../../data/videos.json\";\nimport VideoContext from \"../../store/video-context\";\nimport classes from \"./VideoList.module.css\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\nimport { useContext, useState } from \"react\";\n\nconst VideoList = () => {\n  const [displayCountry, setDisplayCountry] = useState(true);\n  const videoCtx = useContext(VideoContext);\n\n  const changeDisplay = (item) => {\n    videoCtx.addVideo(item);\n  };\n\n  const changeCountry = (country) => {\n    videoCtx.changeCountry(country);\n    setListDisplayType();\n  };\n\n  const setListDisplayType = () => {\n    setDisplayCountry((prev) => !prev);\n  };\n\n  // for each key in video.json maps out a list item, which if clicked reveals list menu\n  const videoCategoriesGen = () => {\n    let content = [];\n    for (let property in videos) {\n      content.push(\n        <li onClick={() => changeCountry(property)} key={property}>\n          {`> `}\n          {property}\n        </li>\n      );\n    }\n    return content;\n  };\n\n  //maps out a list of videos from the state of current country\n  const list = videos[videoCtx.country].map((item) => {\n    return (\n      <li\n        className={videoCtx.name === item.name ? classes.bold : null}\n        key={item.url}\n        onClick={() => changeDisplay(item)}\n        role=\"button\"\n      >\n        {item.name}\n      </li>\n    );\n  });\n\n  return (\n    <div className={classes.videoList}>\n      <ul>\n        {displayCountry ? (\n          videoCategoriesGen()\n        ) : (\n          <>\n            <BiArrowBack\n              role=\"button\"\n              onClick={setListDisplayType}\n              className={classes.icon}\n            />\n            {list}\n          </>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default VideoList;\n","import classes from \"./VolumeControl.module.css\";\n\nconst VolumeControl = (props) => {\n  return (\n    <div className={classes.volumeControl}>\n      <label className={classes.label} htmlFor=\"volume\">\n        Volume\n      </label>\n      <input\n        type=\"range\"\n        className=\"volume\"\n        name={classes.volume}\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        value={props.volume}\n        onChange={props.onVolumeChange}\n      />\n    </div>\n  );\n};\n\nexport default VolumeControl;\n","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div\n      onClick={props.onClick}\n      role={props.role}\n      className={`${classes.Card} ${props.className && props.className}`}\n    >\n      {props.children}\n    </div>\n  );\n};\nexport default Card;\n","import React, { useContext } from \"react\";\nimport AudioContext from \"../../store/audio-context\";\nimport VolumeControl from \"../ui/VolumeControl\";\nimport classes from \"./MusicMenu.module.css\";\nimport music from \"../../data/music.json\";\nimport Card from \"../ui/Card\";\n\nconst MusicMenu = () => {\n  const audioCtx = useContext(AudioContext);\n\n  const onVolumeChange = (e) => {\n    audioCtx.changeVolume(e.target.value);\n  };\n\n  const musicTypesGen = () => {\n    let content = [];\n    for (let genre in music) {\n      content.push(\n        <Card onClick={() => audioCtx.selectRandom(genre)} key={genre}>\n          {genre}\n        </Card>\n      );\n    }\n    return content;\n  };\n\n  return (\n    <div>\n      <Card className={classes.name}>{audioCtx.name}</Card>\n      <VolumeControl onVolumeChange={onVolumeChange} volume={audioCtx.volume} />\n      <p className={classes.type}>select music genre:</p>\n      <div className={classes.wrapper}>{musicTypesGen()}</div>\n    </div>\n  );\n};\n\nexport default MusicMenu;\n","import React from \"react\";\nimport classes from \"./Github.module.css\";\nimport { FiGithub } from \"react-icons/fi\";\n\nconst Github = () => {\n  return (\n    <>\n      <a\n        href=\"https://github.com/Sebosun/Tokyo-Walker\"\n        className={classes.github}\n      >\n        <FiGithub color=\"black\" />\n      </a>\n    </>\n  );\n};\n\nexport default Github;\n","import classes from \"./Button.module.css\";\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick} className={classes.button}>\n      {props.children}\n    </button>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport Button from \"../ui/Button\";\nimport classes from \"./Buttons.module.css\";\n\nconst Buttons = (props) => {\n  return (\n    <div className={classes.buttons}>\n      <Button onClick={props.changeMute}>\n        {props.muted ? \"Turn On The Street Noise\" : \"Turn Off The Street Noise\"}\n      </Button>\n      <Button onClick={props.setPlayStatus}>\n        {`  ${props.playing ? \"Stop music\" : \"Play music\"} `}\n      </Button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import { React, useContext } from \"react\";\n\nimport VideoContext from \"../../store/video-context\";\nimport AudioContext from \"../../store/audio-context\";\nimport VideoList from \"../menu/VideoList\";\nimport MusicMenu from \"../menu/MusicMenu\";\nimport Github from \"../Wrappers/Github\";\nimport Buttons from \"../Wrappers/Buttons\";\n\nimport classes from \"./Menu.module.css\";\n\nconst Menu = () => {\n  const videoCtx = useContext(VideoContext);\n  const audioCtx = useContext(AudioContext);\n\n  return (\n    <div className={classes.menu}>\n      <p className={classes.title}>Tokyo Walker</p>\n      <VideoList />\n      <Buttons\n        changeMute={videoCtx.changeMute}\n        muted={videoCtx.muted}\n        setPlayStatus={audioCtx.setPlayStatus}\n        playing={audioCtx.playing}\n      />\n      {audioCtx.playing && <MusicMenu />}\n      <Github />\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport VideoContext from \"./video-context\";\nimport videos from \"../data/videos.json\";\n\nconst VideoProvider = (props) => {\n  const [videoState, setVideoState] = useState({\n    name: \"Imperial Palace Cherry Blossoms\",\n    url: \"JOqqR5TcL-I\",\n    start: \"924\",\n  });\n  const [isMuted, setIsMuted] = useState(true);\n  const [country, setCountry] = useState(\"japan\");\n\n  const changeVideoHandler = (item) => {\n    setVideoState(item);\n  };\n  const muteHandler = () => {\n    setIsMuted((prev) => !prev);\n  };\n  const changeCountry = (country) => {\n    setCountry(country);\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const selectRandom = () => {\n    const countryLength = videos[country].length;\n    changeVideoHandler(videos[country][getRandomInt(countryLength)]);\n  };\n\n  const videoContext = {\n    name: videoState.name,\n    url: videoState.url,\n    start: videoState.start,\n    muted: isMuted,\n    addVideo: changeVideoHandler,\n    changeMute: muteHandler,\n    country: country,\n    changeCountry: changeCountry,\n    selectRandom: selectRandom,\n  };\n\n  return (\n    <VideoContext.Provider value={videoContext}>\n      {props.children}\n    </VideoContext.Provider>\n  );\n};\n\nexport default VideoProvider;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport AudioContext from \"./audio-context\";\nimport music from \"../data/music.json\";\n\nconst AudioProvider = (props) => {\n  const [audioState, setAudioState] = useState({\n    name: \"Midnight walk\",\n    url: \"https://soundcloud.com/jazzhopcafe/midnight-walk-lofi-jazzhop-chill-mix\",\n  });\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(100);\n  const [genre, setGenre] = useState(\"lofi\");\n\n  const changeAudioHandler = (item) => {\n    setAudioState(item);\n  };\n  const playAudioHandler = () => {\n    setIsPlaying((prev) => !prev);\n  };\n  const changeVolumeHandler = (volume) => {\n    setVolume(volume);\n  };\n  const changeGenre = (genre) => {\n    setGenre(genre);\n  };\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  //default value\n  const selectRandom = (selectedGenre = genre) => {\n    const genreLength = music[selectedGenre].length;\n    changeAudioHandler(music[selectedGenre][getRandomInt(genreLength)]);\n    changeGenre(selectedGenre);\n  };\n\n  const audioContext = {\n    name: audioState.name,\n    url: audioState.url,\n    start: audioState.start,\n    playing: isPlaying,\n\n    setPlayStatus: playAudioHandler,\n    changeAudio: changeAudioHandler,\n\n    volume: volume,\n    changeVolume: changeVolumeHandler,\n\n    genre: genre,\n    changeGenre: changeGenre,\n\n    selectRandom: selectRandom,\n  };\n  return (\n    <AudioContext.Provider value={audioContext}>\n      {props.children}\n    </AudioContext.Provider>\n  );\n};\nexport default AudioProvider;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Audio from \"./components/Wrappers/Audio\";\nimport Video from \"./components/Wrappers/Video\";\nimport Menu from \"./components/Wrappers/Menu\";\nimport VideoProvider from \"./store/VideoProvider\";\nimport AudioProvider from \"./store/AudioProvider\";\nimport { FaEye } from \"react-icons/fa\";\n\nfunction App() {\n  const [menuVisible, setMenuVisible] = useState(true);\n  const menuHandler = () => {\n    setMenuVisible((prev) => !prev);\n  };\n  return (\n    <>\n      <VideoProvider>\n        <AudioProvider>\n          <Video />\n          <Audio />\n          {menuVisible && <Menu />}\n        </AudioProvider>\n      </VideoProvider>\n      <FaEye role=\"button\" className=\"toggleVisible\" onClick={menuHandler} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"VideoList_bold__1lcio\",\"videoList\":\"VideoList_videoList__1hq6D\",\"icon\":\"VideoList_icon__CE5XP\"};"],"sourceRoot":""}