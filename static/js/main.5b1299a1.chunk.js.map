{"version":3,"sources":["components/menu/VideoMenu.module.css","components/ui/VolumeControl.module.css","components/menu/MusicMenu.module.css","components/Wrappers/Menu.module.css","components/ui/Card.module.css","components/Wrappers/Github.module.css","components/ui/Button.module.css","components/Wrappers/Buttons.module.css","reportWebVitals.js","store/redux/audio-slice.js","store/redux/video-slice.js","store/redux/index.js","components/Wrappers/Music.js","components/Wrappers/Video.js","components/menu/VideoMenu.js","components/ui/VolumeControl.js","components/ui/Card.js","components/menu/MusicMenu.js","components/Wrappers/Github.js","components/ui/Button.js","components/Wrappers/Buttons.js","components/Wrappers/Sources.js","components/Wrappers/Menu.js","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","musicSlice","createSlice","name","initialState","url","playing","genre","volume","reducers","playMusic","state","changeMusic","action","console","log","payload","changeVolume","changeGenre","selectRandomSong","max","genreLength","music","length","randomSong","Math","floor","random","dispatch","actions","musicActions","videoSlice","start","muted","country","changeVideo","changeMute","changeCountry","videoActions","store","configureStore","reducer","audio","video","Music","useDispatch","isPlaying","useSelector","stateGenre","className","onEnded","Video","countryLength","videos","randomVideo","selectRandomVideo","VideoList","useState","displayCountrySelector","setDisplayCountrySelector","displayCountrySelectionHandler","prev","list","map","item","classes","bold","onClick","videoChangeHandler","role","videoList","content","property","push","countryChangeHandler","videoCategoriesGen","icon","VolumeControl","props","volumeControl","label","htmlFor","type","min","step","value","onChange","onVolumeChange","Card","children","MusicMenu","songName","e","target","wrapper","musicTypesGen","Github","href","github","color","Button","button","Buttons","buttons","setPlayStatus","Sources","videoUrl","musicUrl","Menu","isMuted","menu","title","sources","App","menuVisible","setMenuVisible","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1299a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"VideoMenu_bold__3bYNd\",\"videoList\":\"VideoMenu_videoList__3PcXc\",\"icon\":\"VideoMenu_icon__1F2iT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volumeControl\":\"VolumeControl_volumeControl__3WcDp\",\"label\":\"VolumeControl_label__1BTs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"MusicMenu_menu__2jKbz\",\"name\":\"MusicMenu_name__3qm6w\",\"wrapper\":\"MusicMenu_wrapper__mFd5Y\",\"type\":\"MusicMenu_type__3z919\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__3KCbk\",\"title\":\"Menu_title__1Tc1I\",\"sources\":\"Menu_sources__3QJr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1hsvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"github\":\"Github_github__3Iv0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__33CwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Buttons_buttons__tlssM\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport music from \"../../data/music.json\";\n\nconst musicSlice = createSlice({\n  name: \"audio\",\n  initialState: {\n    name: \"Indelible Ink\",\n    url: \"https://soundcloud.com/its_dreamy_yt/indelible-ink-lofi-hip-hop-chillout-chillhop-jazzhop\",\n    playing: false,\n    genre: \"lofi\",\n    volume: 100,\n  },\n  reducers: {\n    // equlas to playAudioHandler\n    playMusic(state) {\n      state.playing = !state.playing;\n    },\n    // equals to changeAudioHandler in the context version\n    changeMusic(state, action) {\n      console.log(action.payload.name, action.payload.url);\n      state.name = action.payload.name;\n      state.url = action.payload.url;\n    },\n    // equals to changeVolumeHandler in the context version\n    changeVolume(state, action) {\n      state.volume = action.payload;\n    },\n    // equals to changeGenre in the context version\n    changeGenre(state, action) {\n      state.genre = action.payload;\n    },\n  },\n});\n\n// since random int is a side effect im doing a custom reducer\nexport const selectRandomSong = (genre) => {\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * max);\n  };\n\n  const genreLength = music[genre].length;\n  const randomSong = music[genre][getRandomInt(genreLength)];\n\n  return (dispatch) => {\n    dispatch(musicSlice.actions.changeMusic(randomSong));\n    dispatch(musicSlice.actions.changeGenre(genre));\n  };\n};\n\nexport const musicActions = musicSlice.actions;\n\nexport default musicSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport videos from \"../../data/videos.json\";\n\nconst videoSlice = createSlice({\n  name: \"video\",\n  initialState: {\n    name: \"Imperial Palace Cherry Blossoms\",\n    url: \"JOqqR5TcL-I\",\n    start: \"924\",\n    muted: true,\n    country: \"japan\",\n  },\n  reducers: {\n    changeVideo(state, action) {\n      state.name = action.payload.name;\n      state.url = action.payload.url;\n    },\n    changeMute(state) {\n      state.muted = !state.muted;\n    },\n    changeCountry(state, action) {\n      state.country = action.payload;\n    },\n  },\n});\n\n// since its random, it's a side effect so doing it here\nexport const selectRandomVideo = (country) => {\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * max);\n  };\n\n  const countryLength = videos[country].length;\n  const randomVideo = videos[country][getRandomInt(countryLength)];\n\n  return (dispatch) => {\n    dispatch(videoSlice.actions.changeVideo(randomVideo));\n  };\n};\n\nexport const videoActions = videoSlice.actions;\n\nexport default videoSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport musicActions from \"./audio-slice\";\nimport videoActions from \"./video-slice\";\n\nconst store = configureStore({\n  reducer: { audio: musicActions.reducer, video: videoActions.reducer },\n});\n\nexport default store;\n","import ReactPlayer from \"react-player\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectRandomSong } from \"../../store/redux/audio-slice\";\n\nconst Music = () => {\n  const dispatch = useDispatch();\n  const isPlaying = useSelector((state) => state.audio.playing);\n  const volume = useSelector((state) => state.audio.volume);\n  const url = useSelector((state) => state.audio.url);\n  const stateGenre = useSelector((state) => state.audio.genre);\n\n  return (\n    <>\n      <div className=\"audio-stream\">\n        <ReactPlayer\n          className=\"audio\"\n          playing={isPlaying}\n          volume={volume}\n          url={url}\n          onEnded={() => dispatch(selectRandomSong(stateGenre))}\n        />\n      </div>\n    </>\n  );\n};\nexport default Music;\n","import ReactPlayer from \"react-player\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport \"./Video.css\";\nimport { selectRandomVideo } from \"../../store/redux/video-slice\";\n\nconst Video = () => {\n  const dispatch = useDispatch();\n\n  const muted = useSelector((state) => state.video.muted);\n  const url = useSelector((state) => state.video.url);\n  const start = useSelector((state) => state.video.start);\n  const country = useSelector((state) => state.video.country);\n\n  return (\n    <>\n      <div className=\"video-background\">\n        <div className=\"video-foreground\">\n          <ReactPlayer\n            volume={0.5}\n            url={`https://www.youtube.com/watch?v=${url}${`?t=${start}`}`}\n            muted={muted}\n            onEnded={() => dispatch(selectRandomVideo(country))}\n            playing={true}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Video;\n","import videos from \"../../data/videos.json\";\nimport classes from \"./VideoMenu.module.css\";\nimport { BiArrowBack } from \"react-icons/bi\";\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { videoActions } from \"../../store/redux/video-slice\";\n\nconst VideoList = () => {\n  const dispatch = useDispatch();\n\n  const name = useSelector((state) => state.video.name);\n  const country = useSelector((state) => state.video.country);\n\n  const [displayCountrySelector, setDisplayCountrySelector] = useState(true);\n\n  const videoChangeHandler = (item) => {\n    dispatch(videoActions.changeVideo(item));\n  };\n\n  const countryChangeHandler = (country) => {\n    dispatch(videoActions.changeCountry(country));\n    displayCountrySelectionHandler();\n  };\n\n  const displayCountrySelectionHandler = () => {\n    setDisplayCountrySelector((prev) => !prev);\n  };\n\n  // for each key in video.json maps out a list item, which if clicked reveals list menu\n  const videoCategoriesGen = () => {\n    let content = [];\n    for (let property in videos) {\n      content.push(\n        <li\n          onClick={() => countryChangeHandler(property)}\n          key={property}\n          role=\"button\"\n        >\n          {`> `}\n          {property}\n        </li>\n      );\n    }\n    return content;\n  };\n\n  //maps out a list of videos from the state of current country\n  const list = videos[country].map((item) => {\n    return (\n      <li\n        className={name === item.name ? classes.bold : null}\n        key={item.url}\n        onClick={() => videoChangeHandler(item)}\n        role=\"button\"\n      >\n        {item.name}\n      </li>\n    );\n  });\n\n  return (\n    <div className={classes.videoList}>\n      <ul>\n        {displayCountrySelector ? (\n          videoCategoriesGen()\n        ) : (\n          <>\n            <BiArrowBack\n              onClick={displayCountrySelectionHandler}\n              className={classes.icon}\n              role=\"button\"\n            />\n            {list}\n          </>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default VideoList;\n","import classes from \"./VolumeControl.module.css\";\n\nconst VolumeControl = (props) => {\n  return (\n    <div className={classes.volumeControl}>\n      <label className={classes.label} htmlFor=\"volume\">\n        volume\n      </label>\n      <input\n        type=\"range\"\n        className=\"volume\"\n        name={classes.volume}\n        min=\"0\"\n        max=\"1\"\n        step=\"0.01\"\n        value={props.volume}\n        onChange={props.onVolumeChange}\n      />\n    </div>\n  );\n};\n\nexport default VolumeControl;\n","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div\n      onClick={props.onClick}\n      role={props.role}\n      className={`${classes.Card} ${props.className && props.className}`}\n    >\n      {props.children}\n    </div>\n  );\n};\nexport default Card;\n","import React from \"react\";\nimport VolumeControl from \"../ui/VolumeControl\";\nimport classes from \"./MusicMenu.module.css\";\nimport music from \"../../data/music.json\";\nimport Card from \"../ui/Card\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { musicActions } from \"../../store/redux/audio-slice\";\nimport { selectRandomSong } from \"../../store/redux/audio-slice\";\n\nconst MusicMenu = () => {\n  const volume = useSelector((state) => state.audio.volume);\n  const songName = useSelector((state) => state.audio.name);\n  const dispatch = useDispatch();\n\n  const onVolumeChange = (e) => {\n    dispatch(musicActions.changeVolume(e.target.value));\n  };\n\n  const musicTypesGen = () => {\n    let content = [];\n    for (let genre in music) {\n      content.push(\n        <Card\n          onClick={() => dispatch(selectRandomSong(genre))}\n          key={genre}\n          role=\"button\"\n        >\n          {genre}\n        </Card>\n      );\n    }\n    return content;\n  };\n\n  return (\n    <div>\n      <Card className={classes.name}>{songName}</Card>\n      <VolumeControl onVolumeChange={onVolumeChange} volume={volume} />\n      <p className={classes.type}>select music genre:</p>\n      <div className={classes.wrapper}>{musicTypesGen()}</div>\n    </div>\n  );\n};\n\nexport default MusicMenu;\n","import React from \"react\";\nimport classes from \"./Github.module.css\";\nimport { FiGithub } from \"react-icons/fi\";\n\nconst Github = () => {\n  return (\n    <>\n      <a\n        href=\"https://github.com/Sebosun/Tokyo-Walker\"\n        className={classes.github}\n      >\n        <FiGithub color=\"black\" />\n      </a>\n    </>\n  );\n};\n\nexport default Github;\n","import classes from \"./Button.module.css\";\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick} className={classes.button}>\n      {props.children}\n    </button>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport Button from \"../ui/Button\";\nimport classes from \"./Buttons.module.css\";\n\nconst Buttons = (props) => {\n  return (\n    <div className={classes.buttons}>\n      <Button onClick={props.changeMute}>\n        {props.muted ? \"Turn On The Street Noise\" : \"Turn Off The Street Noise\"}\n      </Button>\n      <Button onClick={props.setPlayStatus}>\n        {`  ${props.playing ? \"Stop music\" : \"Play music\"} `}\n      </Button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\n\nconst Sources = (props) => {\n  const videoUrl = `https://www.youtube.com/watch?v=${props.videoUrl}`;\n  return (\n    <div className={props.className}>\n      <p>sources</p>\n      <div>\n        <a href={props.musicUrl} target=\"_blank\">\n          music\n        </a>\n      </div>\n      <div>\n        <a href={videoUrl} target=\"_blank\">\n          video\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Sources;\n","import { React } from \"react\";\n\nimport VideoList from \"../menu/VideoMenu\";\nimport MusicMenu from \"../menu/MusicMenu\";\nimport Github from \"../Wrappers/Github\";\nimport Buttons from \"../Wrappers/Buttons\";\n\nimport classes from \"./Menu.module.css\";\nimport Sources from \"./Sources\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { musicActions } from \"../../store/redux/audio-slice\";\nimport { videoActions } from \"../../store/redux/video-slice\";\n\nconst Menu = () => {\n  const dispatch = useDispatch();\n\n  const isPlaying = useSelector((state) => state.audio.playing);\n  const musicUrl = useSelector((state) => state.audio.url);\n\n  const isMuted = useSelector((state) => state.video.muted);\n  const videoUrl = useSelector((state) => state.video.url);\n\n  const changeAudioHandler = () => {\n    dispatch(musicActions.playMusic());\n  };\n\n  const changeMuteHandler = () => {\n    dispatch(videoActions.changeMute());\n  };\n\n  return (\n    <div className={classes.menu}>\n      <p className={classes.title}>Tokyo Walker</p>\n      <VideoList />\n      <Buttons\n        changeMute={changeMuteHandler}\n        muted={isMuted}\n        setPlayStatus={changeAudioHandler}\n        playing={isPlaying}\n      />\n      {isPlaying && <MusicMenu />}\n\n      <Sources\n        className={classes.sources}\n        musicUrl={musicUrl}\n        videoUrl={videoUrl}\n      />\n      <Github />\n    </div>\n  );\n};\n\nexport default Menu;\n","import { useState } from \"react\";\nimport { FaEye } from \"react-icons/fa\";\n\nimport Music from \"./components/Wrappers/Music\";\nimport Video from \"./components/Wrappers/Video\";\nimport Menu from \"./components/Wrappers/Menu\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [menuVisible, setMenuVisible] = useState(true);\n  const menuHandler = () => {\n    setMenuVisible((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Video />\n      <Music />\n      {menuVisible && <Menu />}\n      <FaEye role=\"button\" className=\"toggleVisible\" onClick={menuHandler} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/redux/index\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}